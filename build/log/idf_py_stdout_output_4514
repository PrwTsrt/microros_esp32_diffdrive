[0/2] Re-checking globbed directories...
[1/9] Performing build step for 'bootloader'
[1/1] cd /home/smr/esp/Samples/extra_components/micro_ros_espidf_component/microros_esp32_diffdrive/build/bootloader/esp-idf/esptool_py && /home/smr/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/smr/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/smr/esp/Samples/extra_components/micro_ros_espidf_component/microros_esp32_diffdrive/build/bootloader/bootloader.bin
Bootloader binary size 0x51a0 bytes. 0x2e60 bytes (36%) free.
[2/7] Building C object esp-idf/motor/CMakeFiles/__idf_motor.dir/motor.c.obj
[3/7] Linking C static library esp-idf/motor/libmotor.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable main.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/smr/esp/Samples/extra_components/micro_ros_espidf_component/microros_esp32_diffdrive/build/main.bin
[7/7] cd /home/smr/esp/Samples/extra_components/micro_ros_espidf_component/microros_esp32_diffdrive/build/esp-idf/esptool_py && /home/smr/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/smr/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/smr/esp/Samples/extra_components/micro_ros_espidf_component/microros_esp32_diffdrive/build/partition_table/partition-table.bin /home/smr/esp/Samples/extra_components/micro_ros_espidf_component/microros_esp32_diffdrive/build/main.bin
main.bin binary size 0x5c950 bytes. Smallest app partition is 0x177000 bytes. 0x11a6b0 bytes (75%) free.
